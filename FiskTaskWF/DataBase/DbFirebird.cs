using FirebirdSql.Data.FirebirdClient;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace FiscoTask.DataBase
{
    class DbFirebird
    {



        public List<Empresas> BuscarEmpresasDoFirebird(string caminhoBanco)
        {
            var empresas = new List<Empresas>();

            string firebirdConnectionString = $@"ServerType=1;User=SYSDBA;Password=masterkey;
Database={caminhoBanco};Dialect=3;Charset=utf8;";

            using var connection = new FbConnection(firebirdConnectionString);
            connection.Open();

            string query = "SELECT * FROM EMPRESA"; // Ajuste conforme os campos da tabela

            using var command = new FbCommand(query, connection);
            using var reader = command.ExecuteReader();

            while (reader.Read())
            {
                var empresa = new Empresas
                {
                    EMPRESA = reader["EMPRESA"] as int?,
                    NOME = reader["NOME"].ToString(),
                    ENDERECO = reader["ENDERECO"].ToString(),
                    BAIRRO = reader["BAIRRO"].ToString(),
                    CIDADE = reader["CIDADE"].ToString(),
                    UF = reader["UF"].ToString(),
                    CEP = reader["CEP"].ToString(),
                    FONE = reader["FONE"].ToString(),
                    CNPJ = reader["CNPJ"].ToString(),
                    IE = reader["IE"].ToString(),
                    E_MAIL = reader["E_MAIL"].ToString(),
                    CNAE = reader["CNAE"].ToString(),
                    NATESTAB = reader["NATESTAB"].ToString(),
                    RESPONSAVEL = reader["RESPONSAVEL"].ToString(),
                    CPF = reader["CPF"].ToString(),
                    INI_ATIVIDADE = reader["INI_ATIVIDADE"] as DateTime?,
                    INDUSTRIA = reader["INDUSTRIA"].ToString(),
                    COMERCIO = reader["COMERCIO"].ToString(),
                    SERVICO = reader["SERVICO"].ToString(),
                    ENTIDADE = reader["ENTIDADE"].ToString(),
                    ESCOLA = reader["ESCOLA"].ToString(),
                    REGIME = reader["REGIME"].ToString(),
                    MICRO = reader["MICRO"].ToString(),
                    PEQUENOPORTE = reader["PEQUENOPORTE"].ToString(),
                    NENHUMA = reader["NENHUMA"].ToString(),
                    ICMS = reader["ICMS"].ToString(),
                    ISS = reader["ISS"].ToString(),
                    ICMS_ISS = reader["ICMS_ISS"].ToString(),
                    CODIGOLIVRO = reader["CODIGOLIVRO"] as int?,
                    PROT1 = reader["PROT1"].ToString(),
                    PROT2 = reader["PROT2"].ToString(),
                    PROT3 = reader["PROT3"].ToString(),
                    PROT4 = reader["PROT4"].ToString(),
                    PROTGRPR = reader["PROTGRPR"].ToString(),
                    VEN_PROT1 = reader["VEN_PROT1"] as int?,
                    VEN_PROT2 = reader["VEN_PROT2"] as int?,
                    VEN_PROT3 = reader["VEN_PROT3"] as int?,
                    VEN_PROT4 = reader["VEN_PROT4"] as int?,
                    VEN_PROTGRPR = reader["VEN_PROTGRPR"] as int?,
                    CODIGOCT = reader["CODIGOCT"] as int?,
                    TABMUN = reader["TABMUN"] as int?,
                    DDD = reader["DDD"].ToString(),
                    PRE_ESCOLA = reader["PRE_ESCOLA"].ToString(),
                    NUMERO = reader["NUMERO"].ToString(),
                    COMPLEMENTO = reader["COMPLEMENTO"].ToString(),
                    FAX = reader["FAX"].ToString(),
                    REGISTROJUNTA = reader["REGISTROJUNTA"].ToString(),
                    DATAREGISTRO = reader["DATAREGISTRO"] as DateTime?,
                    SOCIEDADEANONIMA = reader["SOCIEDADEANONIMA"].ToString(),
                    ENCERRATRIMESTR = reader["ENCERRATRIMESTR"].ToString(),
                    BALANCOSOCIAL = reader["BALANCOSOCIAL"].ToString(),
                    CLASSIFICACAO = reader["CLASSIFICACAO"].ToString(),
                    ARREDONDASAL = reader["ARREDONDASAL"].ToString(),
                    NPROPRIETARIOS = reader["NPROPRIETARIOS"] as int?,
                    SINDICATO = reader["SINDICATO"] as int?,
                    FPAS = reader["FPAS"].ToString(),
                    PERCEMPRESA = reader["PERCEMPRESA"] as decimal?,
                    CODSAT = reader["CODSAT"].ToString(),
                    PERCSAT = reader["PERCSAT"] as decimal?,
                    PERCFERIAS = reader["PERCFERIAS"] as decimal?,
                    CAPITAL = reader["CAPITAL"] as decimal?,
                    LEI9601 = reader["LEI9601"].ToString(),
                    HRSABINICIO = reader["HRSABINICIO"].ToString(),
                    HRSABFINAL = reader["HRSABFINAL"].ToString(),
                    HRSABDESCANSO = reader["HRSABDESCANSO"].ToString(),
                    DATA1DECCAGED = reader["DATA1DECCAGED"].ToString(),
                    ALTERENDERECO = reader["ALTERENDERECO"].ToString(),
                    DATAALTEREND = reader["DATAALTEREND"].ToString(),
                    SIMPLESFOLHA = reader["SIMPLESFOLHA"].ToString(),
                    CODTERCEIROS = reader["CODTERCEIROS"].ToString(),
                    PERCTERCEIROS = reader["PERCTERCEIROS"] as decimal?,
                    DATABAIXA = reader["DATABAIXA"] as DateTime?,
                    ENCERRATRIMESTRE = reader["ENCERRATRIMESTRE"].ToString(),
                    CONTADOR = reader["CONTADOR"].ToString(),
                    REFLEXODSR = reader["REFLEXODSR"].ToString(),
                    PGTO_SALARIO_MESMO_MES = reader["PGTO_SALARIO_MESMO_MES"].ToString(),
                    IDENTIFICACAO_SINDICATO = reader["IDENTIFICACAO_SINDICATO"].ToString(),
                    DIRF = reader["DIRF"].ToString(),
                    IPI = reader["IPI"].ToString(),
                    CMC = reader["CMC"].ToString(),
                    CONTADORCRC = reader["CONTADORCRC"].ToString(),
                    CONTADORCAT = reader["CONTADORCAT"].ToString(),
                    REGIMETRIBUTARIO = reader["REGIMETRIBUTARIO"] as int?,
                    ESTOQUE12 = reader["ESTOQUE12"] as double?,
                    CUPOMFISCAL = reader["CUPOMFISCAL"].ToString(),
                    SUBSTITUICAO = reader["SUBSTITUICAO"].ToString(),
                    TRANSPORTADORA = reader["TRANSPORTADORA"].ToString(),
                    SIMPLES = reader["SIMPLES"].ToString(),
                    CONVENIO = reader["CONVENIO"].ToString(),
                    CONT_PAGRECE = reader["CONT_PAGRECE"].ToString(),
                    VCTOGRPR = reader["VCTOGRPR"] as int?,
                    TIPO_INSCRICAO = reader["TIPO_INSCRICAO"].ToString(),

                    CONTROLAR_SF = reader["CONTROLAR_SF"].ToString(),
                    PRIDECCAGED = reader["PRIDECCAGED"].ToString(),
                    NOMECONTADOR = reader["NOMECONTADOR"].ToString(),
                    IESUB = reader["IESUB"].ToString(),
                    CPFCONTADOR = reader["CPFCONTADOR"].ToString(),
                    DESC_VT_DIAS_UTEIS = reader["DESC_VT_DIAS_UTEIS"].ToString(),
                    CLASS_CLIENTE = reader["CLASS_CLIENTE"].ToString(),
                    CLASS_FORNECEDOR = reader["CLASS_FORNECEDOR"].ToString(),
                    VENCIMENTO_AIDF = reader["VENCIMENTO_AIDF"] as DateTime?,
                    TABMUNEST = reader["TABMUNEST"].ToString(),
                    CNAE1 = reader["CNAE1"].ToString(),
                    BASE_30_DIAS = reader["BASE_30_DIAS"].ToString(),
                    REDUZ_ALIQ_IR = reader["REDUZ_ALIQ_IR"].ToString(),
                    INTEGRA_CONTABILIDADE = reader["INTEGRA_CONTABILIDADE"].ToString(),
                    DARF_MENSAL = reader["DARF_MENSAL"].ToString(),
                    REGIME_FED_2007 = reader["REGIME_FED_2007"].ToString(),
                    COD_SEGURANCA = reader["COD_SEGURANCA"].ToString(),
                    NOMEFANTASIA = reader["NOMEFANTASIA"].ToString(),
                    COOPERATIVA = reader["COOPERATIVA"].ToString(),
                    ATIVIDADE_SERVICO = reader["ATIVIDADE_SERVICO"].ToString(),
                    VALORHONORARIO = reader["VALORHONORARIO"] as decimal?,
                    MULTA = reader["MULTA"] as decimal?,
                    JUROS = reader["JUROS"] as decimal?,
                    DESCONTO = reader["DESCONTO"] as decimal?,
                    VENCIMENTO = reader["VENCIMENTO"] as int?,
                    VENC_MESMO_MES = reader["VENC_MESMO_MES"].ToString(),
                    CAPITALATUALIZADO = reader["CAPITALATUALIZADO"] as decimal?,
                    PERC_SALARIO_MINIMO = reader["PERC_SALARIO_MINIMO"] as decimal?,
                    ROTA = reader["ROTA"] as int?,
                    COD_MUN_IBGE = reader["COD_MUN_IBGE"].ToString(),
                    BANCO_BOLETO = reader["BANCO_BOLETO"] as int?,
                    ECF = reader["ECF"].ToString(),
                    CONSTRUTORA = reader["CONSTRUTORA"].ToString(),
                    DIA_FECHA_PONTO = reader["DIA_FECHA_PONTO"] as int?,
                    CONTROLE_VT = reader["CONTROLE_VT"] as DateTime?,
                    TIPO_ISS = reader["TIPO_ISS"].ToString(),
                    SENHA_INSS = reader["SENHA_INSS"].ToString(),
                    QUALIFICACAO_PJ = reader["QUALIFICACAO_PJ"].ToString(),
                    IMPRIMIR_VT = reader["IMPRIMIR_VT"].ToString(),
                    DATA_CONTRATO_CONTABIL = reader["DATA_CONTRATO_CONTABIL"] as DateTime?,
                    MES_REAJUSTE = reader["MES_REAJUSTE"] as int?,
                    ANO_REAJUSTADO = reader["ANO_REAJUSTADO"] as int?,
                    IND_PERFIL = reader["IND_PERFIL"].ToString(),
                    SUFRAMA = reader["SUFRAMA"].ToString(),
                    CNES = reader["CNES"].ToString(),
                    RETER_ISS = reader["RETER_ISS"].ToString(),
                    PASSOU_PRODUTO = reader["PASSOU_PRODUTO"].ToString(),
                    DSR_SOMENTE_DESCANSO = reader["DSR_SOMENTE_DESCANSO"].ToString(),
                    VERBA_CARPON_ATRASO = reader["VERBA_CARPON_ATRASO"] as int?,
                    DESCONTAR_DSR_FALTA = reader["DESCONTAR_DSR_FALTA"].ToString(),
                    DESCONTAR_DSR_ATRASO = reader["DESCONTAR_DSR_ATRASO"].ToString(),
                    VERBA_CARPON_FALTA = reader["VERBA_CARPON_FALTA"] as int?,
                    VERBA_CARPON_DSR = reader["VERBA_CARPON_DSR"] as int?,
                    VERBA_CARPON_IJ = reader["VERBA_CARPON_IJ"] as int?,
                    VERBA_CARPON_ADNOT = reader["VERBA_CARPON_ADNOT"] as int?,
                    MARCAR_INTERVALOS = reader["MARCAR_INTERVALOS"].ToString(),
                    BANCO_DE_HORAS = reader["BANCO_DE_HORAS"].ToString(),
                    DIA_FECHAMENTO_CP = reader["DIA_FECHAMENTO_CP"] as int?,
                    PER_APURACAO_HE = reader["PER_APURACAO_HE"].ToString(),
                    INTERVALOS_ALTERNADOS = reader["INTERVALOS_ALTERNADOS"].ToString(),
                    TOLERANCIA_ATRASO_MIN = reader["TOLERANCIA_ATRASO_MIN"] as int?,
                    TOLERANCIA_HE_MIN = reader["TOLERANCIA_HE_MIN"] as int?,
                    AD_NOT_INICIO = reader["AD_NOT_INICIO"] as TimeSpan?,
                    AD_NOT_TERMINO = reader["AD_NOT_TERMINO"] as TimeSpan?,
                    BANCO_DE_HORAS_INICIO = reader["BANCO_DE_HORAS_INICIO"] as DateTime?,
                    BANCO_DE_HORAS_MESES_APUR = reader["BANCO_DE_HORAS_MESES_APUR"] as int?,
                    INFORMAR_INC_DARF = reader["INFORMAR_INC_DARF"].ToString(),
                    SO_HABILITADO = reader["SO_HABILITADO"].ToString(),
                    NAO_GERAR_SPED = reader["NAO_GERAR_SPED"].ToString(),
                    NAO_USA_LIVRO = reader["NAO_USA_LIVRO"].ToString(),
                    NAO_USA_FOLHA = reader["NAO_USA_FOLHA"].ToString(),
                    NAO_USA_CONTABILIDADE = reader["NAO_USA_CONTABILIDADE"].ToString(),
                    NAO_USA_ADMINISTRADOR = reader["NAO_USA_ADMINISTRADOR"].ToString(),
                    E_MAIL_SO = reader["E_MAIL_SO"].ToString(),
                    EMPRESA_OUTROS_SISTEMAS = reader["EMPRESA_OUTROS_SISTEMAS"] as int?,
                    COD_CONT_PREV_REC_BRU = reader["COD_CONT_PREV_REC_BRU"].ToString(),
                    SENHA_SITE_CONTABILIDADE = reader["SENHA_SITE_CONTABILIDADE"].ToString(),
                    EMPRESA_CT = reader["EMPRESA_CT"] as int?,
                    FILIAL_CT = reader["FILIAL_CT"] as int?,
                    DATA_INTEGRAR_ON_LINE = reader["DATA_INTEGRAR_ON_LINE"] as DateTime?,
                    SENHA_SITE = reader["SENHA_SITE"].ToString(),
                    SMS_01 = reader["SMS_01"].ToString(),
                    SMS_02 = reader["SMS_02"].ToString(),
                    SENHA_SITE_FOLHA = reader["SENHA_SITE_FOLHA"].ToString(),
                    CRED_IPI_PIS_COF = reader["CRED_IPI_PIS_COF"].ToString(),
                    TABELA_NCM = reader["TABELA_NCM"] as int?,
                    DATA_INTEGRAR_FP = reader["DATA_INTEGRAR_FP"] as DateTime?,
                    INTEGRAR_FP_DPTO = reader["INTEGRAR_FP_DPTO"].ToString(),
                    TAB_NCM_ICMS = reader["TAB_NCM_ICMS"].ToString(),
                    TAB_NCM_PIS_COF = reader["TAB_NCM_PIS_COF"].ToString(),
                    AIDF_NUMERO = reader["AIDF_NUMERO"].ToString(),
                    AIDF_ANO = reader["AIDF_ANO"].ToString(),
                    DATA_INTEGRAR_ON_LINE_FP = reader["DATA_INTEGRAR_ON_LINE_FP"] as DateTime?,
                    NAO_UTILIZA_PACOTEGUIAS = reader["NAO_UTILIZA_PACOTEGUIAS"].ToString(),
                    EPP_ME = reader["EPP_ME"].ToString(),
                    IMPORTAR_FP_POR_DPTO = reader["IMPORTAR_FP_POR_DPTO"].ToString(),
                    IMPORTAR_FP_SIMP = reader["IMPORTAR_FP_SIMP"].ToString(),
                    VERBA_CARPON_DSRDESCONTADO = reader["VERBA_CARPON_DSRDESCONTADO"] as int?,
                    CLASSTRIB = reader["CLASSTRIB"].ToString(),

                    TP_COOPERATIVA = reader["TP_COOPERATIVA"].ToString(),
                    NR_PROCESSO_RAT = reader["NR_PROCESSO_RAT"].ToString(),
                    TP_PROCESSO_RAT = reader["TP_PROCESSO_RAT"].ToString(),
                    NR_PROCESSO_FAP = reader["NR_PROCESSO_FAP"].ToString(),
                    TP_PROCESSO_FAP = reader["TP_PROCESSO_FAP"].ToString(),
                    SIGLA_MIN = reader["SIGLA_MIN"].ToString(),
                    NR_CERTIF_ISE = reader["NR_CERTIF_ISE"].ToString(),
                    DATA_EMI_CERTIF = reader["DATA_EMI_CERTIF"] as DateTime?,
                    VENC_CERTIF = reader["VENC_CERTIF"] as DateTime?,
                    NR_PROT_RENOV_CERT = reader["NR_PROT_RENOV_CERT"].ToString(),
                    DT_PROT_RENOV_CERT = reader["DT_PROT_RENOV_CERT"] as DateTime?,
                    DT_DIA_OF = reader["DT_DIA_OF"] as DateTime?,
                    PAG_DIA_OF = reader["PAG_DIA_OF"].ToString(),
                    BANCO_DEPOSITO = reader["BANCO_DEPOSITO"].ToString(),
                    AGENCIA_DEPOSITO = reader["AGENCIA_DEPOSITO"].ToString(),
                    TP_CONTA_DEPOSITO = reader["TP_CONTA_DEPOSITO"].ToString(),
                    NR_CONTA_DEPOSITO = reader["NR_CONTA_DEPOSITO"].ToString(),
                    FINANC_FGTS = reader["FINANC_FGTS"].ToString(),
                    DEB_FGTS = reader["DEB_FGTS"].ToString(),
                    AVISO_SMS = reader["AVISO_SMS"].ToString(),
                    AGENDA_REC_FGTS = reader["AGENDA_REC_FGTS"].ToString(),
                    RECIBO_ESOCIAL = reader["RECIBO_ESOCIAL"].ToString(),
                    STATUS_ESOCIAL = reader["STATUS_ESOCIAL"].ToString(),
                    SOCIO_OSTENSIVO = reader["SOCIO_OSTENSIVO"].ToString(),
                    FUSAO = reader["FUSAO"].ToString(),
                    DATA_FUSAO = reader["DATA_FUSAO"] as DateTime?,
                    MD5_1000 = reader["MD5_1000"].ToString(),
                    IND_ATIV_FINAN = reader["IND_ATIV_FINAN"].ToString(),
                    INI_MES_ANO_CRED_PIS = reader["INI_MES_ANO_CRED_PIS"].ToString(),
                    ICMS_TRANSP_LOGIN = reader["ICMS_TRANSP_LOGIN"].ToString(),
                    ICMS_TRANSP_SENHA = reader["ICMS_TRANSP_SENHA"].ToString(),
                    ICMS_TRANSP_CODACESSO = reader["ICMS_TRANSP_CODACESSO"].ToString(),
                    ANEXO_VI = reader["ANEXO_VI"].ToString(),
                    SEGURO_DESEMPREGO_LOGIN = reader["SEGURO_DESEMPREGO_LOGIN"].ToString(),
                    SEGURO_DESEMPREGO_SENHA = reader["SEGURO_DESEMPREGO_SENHA"].ToString(),
                    NASCIMENTO_RESP = reader["NASCIMENTO_RESP"] as DateTime?,
                    DIA_VCTO_ICMS = reader["DIA_VCTO_ICMS"].ToString(),
                    REGISTRO_ELETRONICO = reader["REGISTRO_ELETRONICO"].ToString(),
                    SIAFI = reader["SIAFI"].ToString(),
                    MULT_TAB_RUBRICAS = reader["MULT_TAB_RUBRICAS"].ToString(),
                    DESC_AMB_TRAB = reader["DESC_AMB_TRAB"].ToString(),
                    PROCURADOR_FP = reader["PROCURADOR_FP"].ToString(),
                    CPF_PROCURADOR_FP = reader["CPF_PROCURADOR_FP"].ToString(),
                    DATA_NASC_EMPREGADOR = reader["DATA_NASC_EMPREGADOR"] as DateTime?,
                    COD_ESOCIAL_DOM = reader["COD_ESOCIAL_DOM"].ToString(),
                    SEN_ESOCIAL_DOM = reader["SEN_ESOCIAL_DOM"].ToString(),
                    IMP_FOL_FUN = reader["IMP_FOL_FUN"].ToString(),
                    CONTA_MULTA_JUROS = reader["CONTA_MULTA_JUROS"] as int?,
                    ENVIO_EVENTO_INICIAL = reader["ENVIO_EVENTO_INICIAL"] as DateTime?,
                    VERBA_CARPON_HENOT = reader["VERBA_CARPON_HENOT"] as int?,
                    VERBA_CARPON_DSR_FERIADO = reader["VERBA_CARPON_DSR_FERIADO"] as int?,
                    EMISSOR_LIBERADO = reader["EMISSOR_LIBERADO"].ToString(),
                    ENT_EDUC = reader["ENT_EDUC"].ToString(),
                    N_REG_EMP_TRAB_TEMP = reader["N_REG_EMP_TRAB_TEMP"].ToString(),
                    COD_ECAC = reader["COD_ECAC"].ToString(),
                    SENHA_ECAC = reader["SENHA_ECAC"].ToString(),
                    SERIE_CERTIFICADO = reader["SERIE_CERTIFICADO"].ToString(),
                    SENHA_CERTIFICADO = reader["SENHA_CERTIFICADO"].ToString(),
                    CAIXA_ALTA_LV = reader["CAIXA_ALTA_LV"].ToString(),
                    IMP_NOME_CLI_FOR = reader["IMP_NOME_CLI_FOR"].ToString(),
                    VENCIMENTO_CERTIFICADO = reader["VENCIMENTO_CERTIFICADO"] as DateTime?,
                    E_MAIL_2 = reader["E_MAIL_2"].ToString(),
                    CAMINHO_CERTIFICADO = reader["CAMINHO_CERTIFICADO"].ToString(),
                    PREFIXO_E_SOCIAL = reader["PREFIXO_E_SOCIAL"].ToString(),
                    E_SOCIAL_PRODUCAO = reader["E_SOCIAL_PRODUCAO"].ToString(),
                    REINF_PRODUCAO = reader["REINF_PRODUCAO"].ToString(),
                    TAB_DEPENDENTES_ONLINE = reader["TAB_DEPENDENTES_ONLINE"].ToString(),
                    TAB_DEPENDENTES_ONLINE_URL = reader["TAB_DEPENDENTES_ONLINE_URL"].ToString(),
                    TAB_DEPENDENTES_ONLINE_MD5 = reader["TAB_DEPENDENTES_ONLINE_MD5"].ToString(),
                    REINF_OBRIGADO = reader["REINF_OBRIGADO"].ToString(),
                    RETENCAO_CAIXA = reader["RETENCAO_CAIXA"].ToString(),
                    CAEPF = reader["CAEPF"].ToString(),
                    GRUPO_E_SOCIAL = reader["GRUPO_E_SOCIAL"].ToString(),
                    PORTE = reader["PORTE"].ToString(),
                    IND_OBRIG_ENTREGAR_ECD = reader["IND_OBRIG_ENTREGAR_ECD"].ToString(),
                    GERA_PARCELA_ENTRADA = reader["GERA_PARCELA_ENTRADA"].ToString(),
                    LANCAR_FOLHA_DPTO = reader["LANCAR_FOLHA_DPTO"].ToString(),
                    SOMA_PER_INS_ADIANTAMENTO = reader["SOMA_PER_INS_ADIANTAMENTO"].ToString(),
                    CREDITA_ST_ICMS = reader["CREDITA_ST_ICMS"].ToString(),
                    CLASSIFICACAO_INDUSTRIA = reader["CLASSIFICACAO_INDUSTRIA"].ToString(),
                    OBSERVACAO = reader["OBSERVACAO"] as byte[],
                    REP_LEGAL = reader["REP_LEGAL"].ToString(),
                    TOKEN = reader["TOKEN"].ToString(),
                    SUSPENDE_FERIAS = reader["SUSPENDE_FERIAS"].ToString(),
                    SUSPENDE_13 = reader["SUSPENDE_13"].ToString(),
                    REDUZIDO_13 = reader["REDUZIDO_13"].ToString(),
                    LANCAR_ATESTADO = reader["LANCAR_ATESTADO"].ToString(),
                    EXCLUIR_ICMS_DO_PIS_COF = reader["EXCLUIR_ICMS_DO_PIS_COF"] as DateTime?,
                    API_ENVIO = reader["API_ENVIO"] as DateTime?,
                    UPDATED_AT = reader["UPDATED_AT"] as DateTime?,
                    API_ID = reader["API_ID"].ToString(),
                    LGPD_FUNCIONARIO = reader["LGPD_FUNCIONARIO"].ToString(),
                    EXCLUIR_ICMS_ENT = reader["EXCLUIR_ICMS_ENT"].ToString(),
                    EXCLUIR_ICMS_SAI = reader["EXCLUIR_ICMS_SAI"].ToString(),
                    DATA_CHEGADA_ESCRITORIO = reader["DATA_CHEGADA_ESCRITORIO"] as DateTime?,
                    NIMBLY_APP = reader["NIMBLY_APP"].ToString(),
                    NIMBLY_CN = reader["NIMBLY_CN"].ToString(),
                    NIMBLY_HASH = reader["NIMBLY_HASH"].ToString(),
                    NIMBLY_IDUSR = reader["NIMBLY_IDUSR"].ToString(),
                    NIMBLY_USR = reader["NIMBLY_USR"].ToString(),
                    CNPJ_MATRIZ = reader["CNPJ_MATRIZ"].ToString(),
                    BH_SALDO_ANTERIOR = reader["BH_SALDO_ANTERIOR"] as DateTime?,
                    BH_HOLERITE = reader["BH_HOLERITE"].ToString(),
                    UPLOAD_TAREFA = reader["UPLOAD_TAREFA"].ToString(),
                    PAR_INT_FIS = reader["PAR_INT_FIS"] as int?,
                    SOMA_ICMSST_PIS_COF = reader["SOMA_ICMSST_PIS_COF"] as DateTime?,

                };

                empresas.Add(empresa);
            }

            return empresas;
        }

        public List<DbSocio> BuscarSociosDoFirebird(string caminhoBanco)
        {
            var socios = new List<DbSocio>();

            string firebirdConnectionString = $@"ServerType=1;User=SYSDBA;Password=masterkey;
Database={caminhoBanco};Dialect=3;Charset=utf8;";

            using var connection = new FbConnection(firebirdConnectionString);
            connection.Open();

            string query = "SELECT * FROM SOCIOS"; // Ajuste conforme os campos da tabela

            using var command = new FbCommand(query, connection);
            using var reader = command.ExecuteReader();

            while (reader.Read())
            {
                var socio = new DbSocio
                {
                    EMPRESA = reader["EMPRESA"] as int?,
                    CPF = reader["CPF"].ToString(),
                    RG = reader["RG"].ToString(),
                    SOCIO = reader["SOCIO"].ToString(),
                    ENDERECO = reader["ENDERECO"].ToString(),
                    BAIRRO = reader["BAIRRO"].ToString(),
                    CEP = reader["CEP"].ToString(),
                    FONE = reader["FONE"].ToString(),
                    CAPITAL = reader["CAPITAL"] as decimal?,
                    FUNCAO = reader["FUNCAO"].ToString(),
                    ASSINA = reader["ASSINA"].ToString(),
                    DATA_NASCIMENTO = reader["DATA_NASCIMENTO"].ToString(),
                    DATA_ADMISSAO = reader["DATA_ADMISSAO"].ToString(),
                    DATA_DESLIGAMENTO = reader["DATA_DESLIGAMENTO"].ToString(),
                    DT_ALT_SOC = reader["DT_ALT_SOC"].ToString(),
                    DT_FIM_SOC = reader["DT_FIM_SOC"].ToString(),
                    FUNDO_INVEST = reader["FUNDO_INVEST"].ToString(),
                    PERC_CAP_VOT = reader["PERC_CAP_VOT"] as double?,
                    CPF_REP_LEG = reader["CPF_REP_LEG"].ToString(),
                    QUALIFICACAO = reader["QUALIFICACAO"] as int?,
                    QUALIF_REP_LEG = reader["QUALIF_REP_LEG"] as int?,
                    DIST_LUCRO = reader["DIST_LUCRO"] as double?,
                    IR = reader["IR"] as double?,
                    PRO_LABORE = reader["PRO_LABORE"] as double?,
                    BIN_ASSINATURA = reader["BIN_ASSINATURA"] as byte[],
                    SIGNATARIO = reader["SIGNATARIO"].ToString(),
                };

                socios.Add(socio);
            }

            return socios;
        }
    }
}
